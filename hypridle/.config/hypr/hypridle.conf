general {
    lock_cmd = pidof hyprlock || hyprlock       # Prevent launching multiple instances of hyprlock
    unlock_cmd = killall hyprlock               # kills hyprlock when unlocking (this is always run when "loginctl unlock-session" is called)
    before_sleep_cmd = loginctl lock-session    # Lock the session before suspend
    after_sleep_cmd = hyprctl dispatch dpms on  # Wake display immediately on resume
    ignore_dbus_inhibit = false                 # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}


# turn off screen faster if session is already locked
 listener {
     timeout = 10                            # 30 seconds
     on-timeout = pidof hyprlock && hyprctl dispatch dpms off   # turns off the screen if hyprlock is active
     on-resume = pidof hyprlock && hyprctl dispatch dpms on     # command to run when activity is detected after timeout has fired.
 }

# After 5 minutes: dim screen to avoid OLED burn-in
listener {
    timeout = 300
    on-timeout = brightnessctl -s set 10        # Set brightness to minimum, but not zero
    on-resume = brightnessctl -r                # Restore brightness when activity resumes
}

# After 6 minutes: launch hyprlock (lock screen UI)
listener {
    timeout = 360
    on-timeout = pidof hyprlock || hyprlock
}

# After 7 minutes: system lock the session (for extra safety)
listener {
    timeout = 420
    on-timeout = loginctl lock-session
}

# After 8 minutes: turn off the display
listener {
    timeout = 480
    on-timeout = hyprctl dispatch dpms off      # Turn screen off
    on-resume = hyprctl dispatch dpms on        # Turn screen on when user interacts
}

# After 20 minutes: suspend the machine
listener {
    timeout = 1200
    on-timeout = systemctl suspend
}
